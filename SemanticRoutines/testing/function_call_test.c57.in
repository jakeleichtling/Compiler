/*
function_call_test.c57.in
-demonstrates correct behavior of function
 calls with various parameters and return types

Derek Salama & Jake Leichtling
CS57
5/29/2013

-----------------------------------------------

Testing for:
	-Parameters
		-int (47)
		-double (61)
		-array of int (47)
		-array of double (78)
	-Function declaration (47)
	-Function with void param (103)
	-Function with empty parens (109)
	-Function with multiple params (47)
	-Function with array param (47)
	-Function returning
		-void (47)
		-int (78)
		-double (61)
	-Actual parameters that are
		-Global arrays (140)
		-Local arrays (136)
		-Formal array parameters (97)
	-Function call with no args (143)
	-Function call with multiple args (136)
	-Function call with array parameter (136)
	-Function call in the midst of an expression (146)
	-Return with value (72)
	-Return without value (104)
	-Return in the middle of a function (109)
*/

int global_int_array[10];
double global_double_array[10];

/* void return type*/
/* int[] parameter */
/* int parameter */
/* multiple parameters */
void f0(int aa[], int a_size) {
	int i;
	print "\tf0: printing array param\n";
	for (i = 0; i < a_size; ++i) {
		print "\t\t";
		print aa[i];
		print "\n";
	} 
	return;
}


/* double return type */
/* double parameter */
double f1(double a) {
	print "\tf1:";
	print "\t a =";
	print a;
	print "\n";

	a = 5;
	print "\tNow a = ";
	print a;
	print "\n";

	/* return with a value */
	return a;
}

/* int return type*/
/* double[] parameter */
int f2(int aa[], int a_size, double bb[], int b_size) {
	int i;

	print "\tf2:\n";
	print "\tprinting int[] param\n";
	for (i = 0; i < a_size; ++i) {
		print "\t\t";
		print aa[i];
		print "\n";
	} 
	print "\tprinting double[] param\n";
	for (i = 0; i < b_size; ++i) {
		print "\t\t";
		print bb[i];
		print "\n";
	} 


	print "\tcalling f0 with parameter array\n";
	f0(aa, a_size);

	return 1;
}

/* void parameter */
void voidftn(void) {
	/* return without a value */
	return;
}

/* empty parens */
int emptyftn() {
	if (1) {
		return 36;
	} else {
		return 46;
	}
}

void main(void) {
	int local_int_array[10];
	double local_double_array[10];
	double a = 12.3;
	double result;
	int i;

	print "Main: initializing arrays s.t. a[i] = i\n";
	for (i = 0; i < 10; ++i) {
		local_int_array[i] = i;
		global_int_array[i] = i;
		local_double_array[i] = i;
		global_double_array[i] = i;
	}

	print "\tCalling f2 with local arrays\n";
	/* ftn call with multiple args */
	/* ftn call with array parameter */
	/* local array actual param */
	f2(local_int_array, 10, local_double_array, 10);

	print "\tCalling f2 with global arrays\n";
	/* global array actual param */
	f2(global_int_array, 10, global_double_array, 10);

	/* ftn call with no args */
	voidftn();

	/* ftn call in middle of an expression */
	a = a + emptyftn();

	print "\tCalling f1 with a=";
	print a;
	print "\n";
	result = f1(a);
	print "\t\tresult of r1 = ";
	print result;
	print "\n";
}
